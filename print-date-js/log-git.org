Separo el código interno de la función buscando funciones internas puras.

* En este commit
Intento llevarme el primer side-effect fuera de alguna manera.
Lo importante es que el método conserve la función: que imprima la fecha actual!
La idea inicial si obtengo el texto por separado. Lo puedo examinar.

Ahora mismo no puedo examinar el método porque no sé como controlar el stdio. 
Lo que intentaré es separar su código interno para poder examinar cada una de las líneas. Una linea, una función. Una función un test.
En resumen testear cada una de las líneas internas del método.

Añado una línea donde doy forma a la fecha.
Puesto que el método formador ya está testeado no tengo que hacerlo
a menos que yo desee algún formato especial.

Como me hacía daño a los ojos un método que devolviera nil lo he
cambiado. Tenía dos opciones devolver la propia instancia o devolver la fecha.
Elegí la fecha al final pero por azar.


* EL PRIMER ARRANQUE
instalar con: git ...
  ejecutar:
      npm install

      
* El planteamiento:
Imagino que tengo libertad para modificar aquello que considere necesario para
poderle hacer un test a ese método.

Mi punto de vista:
1. Lo que veo es un método que es dos veces impuro. por el console.log y por el Date
2. No se puede enviar como return una función que no devuelve nada.
3. qué formato tiene la fecha? Mejor lo decido yo lo paso a string con variable descriptiva.
4. La misión es examinar la salida estandart

Que Date no es puro es porque cada vez que lo llamo me devuelve un valor distinto.
Que console.log no es puro es porque el resultado se sale del scope del método.
      
?Hay algún test que me permita controlar stdio? Si no lo hay tendré que separar el
generador de texto y el console.log que es realmente el que produce el side-effect.

